# Generated by Django 5.1.6 on 2025-03-18 02:12

import core.models.base
import django.db.models.deletion
import django.utils.timezone
import library.modelutils.fields
import library.simplehistory.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('warehouse', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StockAttribute',
            fields=[
                ('created', library.modelutils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', library.modelutils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('read_only', models.BooleanField(default=False, help_text='Used for disable modification', verbose_name='read only')),
                ('enable', models.BooleanField(default=False, help_text='Used for usable', verbose_name='enable')),
                ('properties', models.JSONField(default=dict, help_text='Used for other field value', verbose_name='properties')),
                ('description', models.TextField(blank=True, help_text='Used for remark', null=True, verbose_name='description')),
                ('attribute_id', models.AutoField(help_text='used for stock attribute id', primary_key=True, serialize=False, verbose_name='stock attribute id')),
                ('attribute_name', models.TextField(help_text='used for stock attribute name', verbose_name='stock attribute name')),
                ('type', models.CharField(blank=True, choices=[('COLOR', 'Color'), ('WEIGHT', 'Weight'), ('UNIT', 'Unit'), ('VOLUME', 'Volume')], help_text='used for stock attribute type', null=True, verbose_name='stock attribute type')),
                ('value', models.TextField(help_text='used for stock attribute value', verbose_name='stock attribute value')),
            ],
            options={
                'verbose_name': 'Used for stock attribute',
                'db_table': '"warehouse"."stock_attribute"',
                'managed': True,
            },
            bases=(core.models.base.BaseStatus, models.Model),
        ),
        migrations.CreateModel(
            name='StockService',
            fields=[
                ('created', library.modelutils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', library.modelutils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('read_only', models.BooleanField(default=False, help_text='Used for disable modification', verbose_name='read only')),
                ('enable', models.BooleanField(default=False, help_text='Used for usable', verbose_name='enable')),
                ('properties', models.JSONField(default=dict, help_text='Used for other field value', verbose_name='properties')),
                ('description', models.TextField(blank=True, help_text='Used for remark', null=True, verbose_name='description')),
                ('service_id', models.TextField(help_text='used for service id', primary_key=True, serialize=False, verbose_name='service id')),
                ('service_name', models.TextField(help_text='used for service name', verbose_name='service name')),
                ('price', models.DecimalField(blank=True, decimal_places=4, help_text='used for service cost', max_digits=17, null=True, verbose_name='service cost')),
            ],
            options={
                'verbose_name': 'Used for stock service',
                'db_table': '"warehouse"."stock_service"',
                'permissions': [('add_stock_service_permission', 'Can add stock service permission'), ('delete_stock_service_permission', 'Can delete stock service permission'), ('update_stock_service_permission', 'Can update stock service permission')],
                'managed': True,
            },
            bases=(core.models.base.BaseStatus, models.Model),
        ),
        migrations.AlterModelOptions(
            name='asset',
            options={'managed': True, 'permissions': [('add_asset_permission', 'Can add asset permission'), ('delete_asset_permission', 'Can delete asset permission'), ('update_asset_permission', 'Can update asset permission')], 'verbose_name': 'Used for asset'},
        ),
        migrations.AlterField(
            model_name='asset',
            name='asset_status',
            field=models.CharField(choices=[('AVAILABLE', 'Available'), ('LOANED', 'Loaned'), ('SOLD', 'Sold')], default='AVAILABLE', help_text='used for asset status', max_length=30, verbose_name='asset status'),
        ),
        migrations.AlterField(
            model_name='historicalasset',
            name='asset_status',
            field=models.CharField(choices=[('AVAILABLE', 'Available'), ('LOANED', 'Loaned'), ('SOLD', 'Sold')], default='AVAILABLE', help_text='used for asset status', max_length=30, verbose_name='asset status'),
        ),
        migrations.CreateModel(
            name='HistoricalStockAttribute',
            fields=[
                ('created', library.modelutils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', library.modelutils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('read_only', models.BooleanField(default=False, help_text='Used for disable modification', verbose_name='read only')),
                ('enable', models.BooleanField(default=False, help_text='Used for usable', verbose_name='enable')),
                ('properties', models.JSONField(default=dict, help_text='Used for other field value', verbose_name='properties')),
                ('description', models.TextField(blank=True, help_text='Used for remark', null=True, verbose_name='description')),
                ('attribute_id', models.IntegerField(blank=True, db_index=True, help_text='used for stock attribute id', verbose_name='stock attribute id')),
                ('attribute_name', models.TextField(help_text='used for stock attribute name', verbose_name='stock attribute name')),
                ('type', models.CharField(blank=True, choices=[('COLOR', 'Color'), ('WEIGHT', 'Weight'), ('UNIT', 'Unit'), ('VOLUME', 'Volume')], help_text='used for stock attribute type', null=True, verbose_name='stock attribute type')),
                ('value', models.TextField(help_text='used for stock attribute value', verbose_name='stock attribute value')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Used store history stock attribute',
                'verbose_name_plural': 'historical Used for stock attributes',
                'db_table': '"history"."warehouse_stock_attribute"',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(library.simplehistory.models.HistoricalChanges, core.models.base.BaseStatus, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStockService',
            fields=[
                ('created', library.modelutils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', library.modelutils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('read_only', models.BooleanField(default=False, help_text='Used for disable modification', verbose_name='read only')),
                ('enable', models.BooleanField(default=False, help_text='Used for usable', verbose_name='enable')),
                ('properties', models.JSONField(default=dict, help_text='Used for other field value', verbose_name='properties')),
                ('description', models.TextField(blank=True, help_text='Used for remark', null=True, verbose_name='description')),
                ('service_id', models.TextField(db_index=True, help_text='used for service id', verbose_name='service id')),
                ('service_name', models.TextField(help_text='used for service name', verbose_name='service name')),
                ('price', models.DecimalField(blank=True, decimal_places=4, help_text='used for service cost', max_digits=17, null=True, verbose_name='service cost')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Used store history stock service',
                'verbose_name_plural': 'historical Used for stock services',
                'db_table': '"history"."warehouse_stock_service"',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(library.simplehistory.models.HistoricalChanges, core.models.base.BaseStatus, models.Model),
        ),
        migrations.CreateModel(
            name='StockSchema',
            fields=[
                ('created', library.modelutils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', library.modelutils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('read_only', models.BooleanField(default=False, help_text='Used for disable modification', verbose_name='read only')),
                ('enable', models.BooleanField(default=False, help_text='Used for usable', verbose_name='enable')),
                ('properties', models.JSONField(default=dict, help_text='Used for other field value', verbose_name='properties')),
                ('description', models.TextField(blank=True, help_text='Used for remark', null=True, verbose_name='description')),
                ('schema_id', models.TextField(help_text='used for identity', primary_key=True, serialize=False, verbose_name='schema id')),
                ('schema_name', models.TextField(help_text='used for stock schema name', verbose_name='stock schema name')),
                ('layer', models.IntegerField(default=None, help_text='used for schema layer', verbose_name='schema layer')),
                ('parent', models.ForeignKey(blank=True, help_text='Used for hierarchy parent id', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='children_set', to='warehouse.stockschema', verbose_name='parent')),
            ],
            options={
                'verbose_name': 'Used for stock schema',
                'db_table': '"warehouse"."stock_schema"',
                'managed': True,
            },
            bases=(core.models.base.BaseStatus, models.Model),
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('created', library.modelutils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', library.modelutils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('read_only', models.BooleanField(default=False, help_text='Used for disable modification', verbose_name='read only')),
                ('enable', models.BooleanField(default=False, help_text='Used for usable', verbose_name='enable')),
                ('properties', models.JSONField(default=dict, help_text='Used for other field value', verbose_name='properties')),
                ('description', models.TextField(blank=True, help_text='Used for remark', null=True, verbose_name='description')),
                ('stock_id', models.TextField(help_text='used for stock id', primary_key=True, serialize=False, verbose_name='stock id')),
                ('stock_name', models.TextField(blank=True, help_text='used for stock name', verbose_name='stock name')),
                ('price', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock value', max_digits=17, null=True, verbose_name='stock value')),
                ('hpp', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock hpp', max_digits=17, null=True, verbose_name='stock hpp')),
                ('on_hand', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock on hand', max_digits=17, null=True, verbose_name='stock on hand')),
                ('allocated', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock allocated', max_digits=17, null=True, verbose_name='stock allocated')),
                ('temp_allocated', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock temp allocated', max_digits=17, null=True, verbose_name='stock temp allocated')),
                ('price_allocated', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock value allocated', max_digits=17, null=True, verbose_name='stock value allocated')),
                ('reorder', models.BooleanField(blank=True, default=False, help_text='used for stock reorder', null=True, verbose_name='stock reorder')),
                ('out_stock_purchase', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock out stock purchase', max_digits=17, null=True, verbose_name='stock out stock purchase')),
                ('out_stock_sales', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock out stock sales', max_digits=17, null=True, verbose_name='stock out stock sales')),
                ('uninvoiced', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock uninvoiced', max_digits=17, null=True, verbose_name='stock uninvoiced')),
                ('hold', models.BooleanField(default=False, help_text='used for stock hold', verbose_name='stock hold')),
                ('last_hpp', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock last hpp', max_digits=17, null=True, verbose_name='stock last hpp')),
                ('last_price', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock last price', max_digits=17, null=True, verbose_name='stock last price')),
                ('picture', models.ImageField(blank=True, null=True, upload_to=None)),
                ('note', models.TextField(blank=True, help_text='used for stock note', null=True, verbose_name='stock note')),
                ('is_product', models.BooleanField(blank=True, default=False, help_text='used for stock is product', null=True, verbose_name='stock is product')),
                ('division', models.TextField(blank=True, default=None, help_text='used for stock division', null=True, verbose_name='stock division')),
                ('stock_schema', models.ForeignKey(blank=True, help_text='Used for hierarchy stock schema id', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='stock_schema', to='warehouse.stockschema', verbose_name='stock schema id')),
            ],
            options={
                'verbose_name': 'Used for stock',
                'db_table': '"warehouse"."stock"',
                'permissions': [('add_stock_permission', 'Can add stock permission'), ('delete_stock_permission', 'Can delete stock permission'), ('update_stock_permission', 'Can update stock permission')],
                'managed': True,
            },
            bases=(core.models.base.BaseStatus, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStockSchema',
            fields=[
                ('created', library.modelutils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', library.modelutils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('read_only', models.BooleanField(default=False, help_text='Used for disable modification', verbose_name='read only')),
                ('enable', models.BooleanField(default=False, help_text='Used for usable', verbose_name='enable')),
                ('properties', models.JSONField(default=dict, help_text='Used for other field value', verbose_name='properties')),
                ('description', models.TextField(blank=True, help_text='Used for remark', null=True, verbose_name='description')),
                ('schema_id', models.TextField(db_index=True, help_text='used for identity', verbose_name='schema id')),
                ('schema_name', models.TextField(help_text='used for stock schema name', verbose_name='stock schema name')),
                ('layer', models.IntegerField(default=None, help_text='used for schema layer', verbose_name='schema layer')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, help_text='Used for hierarchy parent id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.stockschema', verbose_name='parent')),
            ],
            options={
                'verbose_name': 'Used store history stock schema',
                'verbose_name_plural': 'historical Used for stock schemas',
                'db_table': '"history"."warehouse_stock_schema"',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(library.simplehistory.models.HistoricalChanges, core.models.base.BaseStatus, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStock',
            fields=[
                ('created', library.modelutils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', library.modelutils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('read_only', models.BooleanField(default=False, help_text='Used for disable modification', verbose_name='read only')),
                ('enable', models.BooleanField(default=False, help_text='Used for usable', verbose_name='enable')),
                ('properties', models.JSONField(default=dict, help_text='Used for other field value', verbose_name='properties')),
                ('description', models.TextField(blank=True, help_text='Used for remark', null=True, verbose_name='description')),
                ('stock_id', models.TextField(db_index=True, help_text='used for stock id', verbose_name='stock id')),
                ('stock_name', models.TextField(blank=True, help_text='used for stock name', verbose_name='stock name')),
                ('price', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock value', max_digits=17, null=True, verbose_name='stock value')),
                ('hpp', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock hpp', max_digits=17, null=True, verbose_name='stock hpp')),
                ('on_hand', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock on hand', max_digits=17, null=True, verbose_name='stock on hand')),
                ('allocated', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock allocated', max_digits=17, null=True, verbose_name='stock allocated')),
                ('temp_allocated', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock temp allocated', max_digits=17, null=True, verbose_name='stock temp allocated')),
                ('price_allocated', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock value allocated', max_digits=17, null=True, verbose_name='stock value allocated')),
                ('reorder', models.BooleanField(blank=True, default=False, help_text='used for stock reorder', null=True, verbose_name='stock reorder')),
                ('out_stock_purchase', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock out stock purchase', max_digits=17, null=True, verbose_name='stock out stock purchase')),
                ('out_stock_sales', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock out stock sales', max_digits=17, null=True, verbose_name='stock out stock sales')),
                ('uninvoiced', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock uninvoiced', max_digits=17, null=True, verbose_name='stock uninvoiced')),
                ('hold', models.BooleanField(default=False, help_text='used for stock hold', verbose_name='stock hold')),
                ('last_hpp', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock last hpp', max_digits=17, null=True, verbose_name='stock last hpp')),
                ('last_price', models.DecimalField(blank=True, decimal_places=4, help_text='used for stock last price', max_digits=17, null=True, verbose_name='stock last price')),
                ('picture', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, help_text='used for stock note', null=True, verbose_name='stock note')),
                ('is_product', models.BooleanField(blank=True, default=False, help_text='used for stock is product', null=True, verbose_name='stock is product')),
                ('division', models.TextField(blank=True, default=None, help_text='used for stock division', null=True, verbose_name='stock division')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('stock_schema', models.ForeignKey(blank=True, db_constraint=False, help_text='Used for hierarchy stock schema id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.stockschema', verbose_name='stock schema id')),
            ],
            options={
                'verbose_name': 'Used store history stock',
                'verbose_name_plural': 'historical Used for stocks',
                'db_table': '"history"."warehouse_stock"',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(library.simplehistory.models.HistoricalChanges, core.models.base.BaseStatus, models.Model),
        ),
    ]
