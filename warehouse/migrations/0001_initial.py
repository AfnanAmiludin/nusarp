# Generated by Django 5.1.6 on 2025-03-17 14:37

import core.models.base
import django.db.models.deletion
import django.utils.timezone
import library.modelutils.fields
import library.simplehistory.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssetSchema',
            fields=[
                ('created', library.modelutils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', library.modelutils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('read_only', models.BooleanField(default=False, help_text='Used for disable modification', verbose_name='read only')),
                ('enable', models.BooleanField(default=False, help_text='Used for usable', verbose_name='enable')),
                ('properties', models.JSONField(default=dict, help_text='Used for other field value', verbose_name='properties')),
                ('description', models.TextField(blank=True, help_text='Used for remark', null=True, verbose_name='description')),
                ('schema_id', models.TextField(help_text='used for identity', primary_key=True, serialize=False, verbose_name='schema id')),
                ('schema_name', models.TextField(help_text='used for stock schema name', verbose_name='stock schema name')),
                ('layer', models.IntegerField(default=None, help_text='used for schema layer', verbose_name='schema layer')),
                ('parent', models.ForeignKey(blank=True, help_text='Used for hierarchy parent id', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='children_set', to='warehouse.assetschema', verbose_name='parent')),
            ],
            options={
                'verbose_name': 'Used for asset schema',
                'db_table': '"warehouse"."asset_schema"',
                'managed': True,
            },
            bases=(core.models.base.BaseStatus, models.Model),
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('created', library.modelutils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', library.modelutils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('read_only', models.BooleanField(default=False, help_text='Used for disable modification', verbose_name='read only')),
                ('enable', models.BooleanField(default=False, help_text='Used for usable', verbose_name='enable')),
                ('properties', models.JSONField(default=dict, help_text='Used for other field value', verbose_name='properties')),
                ('description', models.TextField(blank=True, help_text='Used for remark', null=True, verbose_name='description')),
                ('asset_id', models.TextField(help_text='used for identity', primary_key=True, serialize=False, verbose_name='asset id')),
                ('asset_name', models.TextField(help_text='used for asset name', verbose_name='asset name')),
                ('pack', models.TextField(blank=True, help_text='used for asset pack', null=True, verbose_name='asset pack')),
                ('order_date', models.DateTimeField(blank=True, help_text='used for asset order date', null=True, verbose_name='asset order date')),
                ('quantity', models.IntegerField(blank=True, help_text='used for asset quantity', null=True, verbose_name='asset quantity')),
                ('price', models.DecimalField(blank=True, decimal_places=4, help_text='used for asset price', max_digits=17, null=True, verbose_name='asset price')),
                ('age', models.IntegerField(blank=True, help_text='used for asset age', null=True, verbose_name='asset age')),
                ('depreciation_value', models.DecimalField(blank=True, decimal_places=4, help_text='used for asset depreciation', max_digits=17, null=True, verbose_name='asset depreciation')),
                ('depreciation_quantity', models.DecimalField(blank=True, decimal_places=4, help_text='used for asset depreciation quantity', max_digits=17, null=True, verbose_name='asset depreciation quantity')),
                ('accumulative_value', models.DecimalField(blank=True, decimal_places=4, help_text='used for asset accumulative value', max_digits=17, null=True, verbose_name='asset accumulative value')),
                ('open_balance_status', models.BooleanField(default=False, help_text='used for asset open balance status', verbose_name='asset open balance status')),
                ('accumulative_depreciation', models.DecimalField(blank=True, decimal_places=4, help_text='used for asset accumulative depreciation', max_digits=17, null=True, verbose_name='asset accumulative depreciation')),
                ('depreciation_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='used for asset depreciation percentage', max_digits=5, null=True, verbose_name='asset depreciation percentage')),
                ('branch', models.TextField(blank=True, help_text='used for asset branch', null=True, verbose_name='asset branch')),
                ('location', models.TextField(blank=True, help_text='used for asset location', null=True, verbose_name='asset location')),
                ('department', models.TextField(blank=True, default=None, help_text='used for asset department', null=True, verbose_name='asset department')),
                ('sub_department', models.TextField(blank=True, default=None, help_text='used for asset sub department', null=True, verbose_name='asset sub department')),
                ('room', models.TextField(blank=True, help_text='used for asset room', null=True, verbose_name='asset room')),
                ('rack', models.TextField(blank=True, help_text='used for asset rack', null=True, verbose_name='asset rack')),
                ('reference', models.TextField(blank=True, help_text='used for asset reference', null=True, verbose_name='asset reference')),
                ('created_year', models.DateField(auto_now=True, help_text='used for asset created year', verbose_name='asset created year')),
                ('brand', models.TextField(blank=True, help_text='used for asset brand', null=True, verbose_name='asset brand')),
                ('other_specific', models.TextField(blank=True, help_text='used for asset other specific', null=True, verbose_name='asset other specific')),
                ('other_situation', models.TextField(blank=True, help_text='used for asset situation', null=True, verbose_name='asset situation')),
                ('is_product', models.BooleanField(blank=True, default=False, help_text='used for asset is product', null=True, verbose_name='asset is product')),
                ('supplier', models.TextField(blank=True, default=None, help_text='used for asset supplier', null=True, verbose_name='asset supplier')),
                ('cost_center', models.TextField(blank=True, default=None, help_text='used for asset cost center', null=True, verbose_name='asset cost center')),
                ('asset_status', models.CharField(choices=[('AVAILABLE', 'Available'), ('LOANED', 'Loaned'), ('SOLD', 'Sold')], default='AVAILABLE', help_text='used for asset status', verbose_name='asset status')),
                ('asset_schema', models.ForeignKey(blank=True, help_text='Used for hierarchy asset schema id', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='asset_schema', to='warehouse.assetschema', verbose_name='asset schema id')),
            ],
            options={
                'verbose_name': 'Used for asset',
                'db_table': '"warehouse"."asset"',
                'permissions': [('add_asset_permission', 'Can add asset permission'), ('delete_asset_permission', 'Can delete asset permission'), ('add_asset_group', 'Can add asset group'), ('delete_asset_group', 'Can delete asset group'), ('change_asset_password', 'Can change asset password')],
                'managed': True,
            },
            bases=(core.models.base.BaseStatus, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAsset',
            fields=[
                ('created', library.modelutils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', library.modelutils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('read_only', models.BooleanField(default=False, help_text='Used for disable modification', verbose_name='read only')),
                ('enable', models.BooleanField(default=False, help_text='Used for usable', verbose_name='enable')),
                ('properties', models.JSONField(default=dict, help_text='Used for other field value', verbose_name='properties')),
                ('description', models.TextField(blank=True, help_text='Used for remark', null=True, verbose_name='description')),
                ('asset_id', models.TextField(db_index=True, help_text='used for identity', verbose_name='asset id')),
                ('asset_name', models.TextField(help_text='used for asset name', verbose_name='asset name')),
                ('pack', models.TextField(blank=True, help_text='used for asset pack', null=True, verbose_name='asset pack')),
                ('order_date', models.DateTimeField(blank=True, help_text='used for asset order date', null=True, verbose_name='asset order date')),
                ('quantity', models.IntegerField(blank=True, help_text='used for asset quantity', null=True, verbose_name='asset quantity')),
                ('price', models.DecimalField(blank=True, decimal_places=4, help_text='used for asset price', max_digits=17, null=True, verbose_name='asset price')),
                ('age', models.IntegerField(blank=True, help_text='used for asset age', null=True, verbose_name='asset age')),
                ('depreciation_value', models.DecimalField(blank=True, decimal_places=4, help_text='used for asset depreciation', max_digits=17, null=True, verbose_name='asset depreciation')),
                ('depreciation_quantity', models.DecimalField(blank=True, decimal_places=4, help_text='used for asset depreciation quantity', max_digits=17, null=True, verbose_name='asset depreciation quantity')),
                ('accumulative_value', models.DecimalField(blank=True, decimal_places=4, help_text='used for asset accumulative value', max_digits=17, null=True, verbose_name='asset accumulative value')),
                ('open_balance_status', models.BooleanField(default=False, help_text='used for asset open balance status', verbose_name='asset open balance status')),
                ('accumulative_depreciation', models.DecimalField(blank=True, decimal_places=4, help_text='used for asset accumulative depreciation', max_digits=17, null=True, verbose_name='asset accumulative depreciation')),
                ('depreciation_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='used for asset depreciation percentage', max_digits=5, null=True, verbose_name='asset depreciation percentage')),
                ('branch', models.TextField(blank=True, help_text='used for asset branch', null=True, verbose_name='asset branch')),
                ('location', models.TextField(blank=True, help_text='used for asset location', null=True, verbose_name='asset location')),
                ('department', models.TextField(blank=True, default=None, help_text='used for asset department', null=True, verbose_name='asset department')),
                ('sub_department', models.TextField(blank=True, default=None, help_text='used for asset sub department', null=True, verbose_name='asset sub department')),
                ('room', models.TextField(blank=True, help_text='used for asset room', null=True, verbose_name='asset room')),
                ('rack', models.TextField(blank=True, help_text='used for asset rack', null=True, verbose_name='asset rack')),
                ('reference', models.TextField(blank=True, help_text='used for asset reference', null=True, verbose_name='asset reference')),
                ('created_year', models.DateField(blank=True, editable=False, help_text='used for asset created year', verbose_name='asset created year')),
                ('brand', models.TextField(blank=True, help_text='used for asset brand', null=True, verbose_name='asset brand')),
                ('other_specific', models.TextField(blank=True, help_text='used for asset other specific', null=True, verbose_name='asset other specific')),
                ('other_situation', models.TextField(blank=True, help_text='used for asset situation', null=True, verbose_name='asset situation')),
                ('is_product', models.BooleanField(blank=True, default=False, help_text='used for asset is product', null=True, verbose_name='asset is product')),
                ('supplier', models.TextField(blank=True, default=None, help_text='used for asset supplier', null=True, verbose_name='asset supplier')),
                ('cost_center', models.TextField(blank=True, default=None, help_text='used for asset cost center', null=True, verbose_name='asset cost center')),
                ('asset_status', models.CharField(choices=[('AVAILABLE', 'Available'), ('LOANED', 'Loaned'), ('SOLD', 'Sold')], default='AVAILABLE', help_text='used for asset status', verbose_name='asset status')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('asset_schema', models.ForeignKey(blank=True, db_constraint=False, help_text='Used for hierarchy asset schema id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.assetschema', verbose_name='asset schema id')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Used store history asset',
                'verbose_name_plural': 'historical Used for assets',
                'db_table': '"history"."warehouse_asset"',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(library.simplehistory.models.HistoricalChanges, core.models.base.BaseStatus, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAssetSchema',
            fields=[
                ('created', library.modelutils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', library.modelutils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('read_only', models.BooleanField(default=False, help_text='Used for disable modification', verbose_name='read only')),
                ('enable', models.BooleanField(default=False, help_text='Used for usable', verbose_name='enable')),
                ('properties', models.JSONField(default=dict, help_text='Used for other field value', verbose_name='properties')),
                ('description', models.TextField(blank=True, help_text='Used for remark', null=True, verbose_name='description')),
                ('schema_id', models.TextField(db_index=True, help_text='used for identity', verbose_name='schema id')),
                ('schema_name', models.TextField(help_text='used for stock schema name', verbose_name='stock schema name')),
                ('layer', models.IntegerField(default=None, help_text='used for schema layer', verbose_name='schema layer')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, help_text='Used for hierarchy parent id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.assetschema', verbose_name='parent')),
            ],
            options={
                'verbose_name': 'Used store history asset schema',
                'verbose_name_plural': 'historical Used for asset schemas',
                'db_table': '"history"."warehouse_asset_schema"',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(library.simplehistory.models.HistoricalChanges, core.models.base.BaseStatus, models.Model),
        ),
    ]
